{"ast":null,"code":"var _jsxFileName = \"/Users/tickledmedia/Kinnari/my-repo/memory-game/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useCallback, useRef, useState } from 'react';\nimport rose from '../images/rose.jpeg';\nimport daisy from '../images/daisy.webp';\nimport lavender from '../images/lavender.jpeg';\nimport lilly from '../images/lilly.jpeg';\nimport sunflower from '../images/sunflower.jpeg';\nimport tulip from '../images/tulip.jpeg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const imageCollection = [{\n    id: 0,\n    url: rose,\n    title: 'rose'\n  }, {\n    id: 1,\n    url: daisy,\n    title: 'daisy'\n  }, {\n    id: 2,\n    url: lavender,\n    title: 'lavender'\n  }, {\n    id: 3,\n    url: lilly,\n    title: 'lilly'\n  }, {\n    id: 4,\n    url: sunflower,\n    title: 'sunflower'\n  }, {\n    id: 5,\n    url: tulip,\n    title: 'tulip'\n  }, {\n    id: 6,\n    url: rose,\n    title: 'rose'\n  }, {\n    id: 7,\n    url: daisy,\n    title: 'daisy'\n  }, {\n    id: 8,\n    url: lavender,\n    title: 'lavender'\n  }, {\n    id: 9,\n    url: lilly,\n    title: 'lilly'\n  }, {\n    id: 10,\n    url: sunflower,\n    title: 'sunflower'\n  }, {\n    id: 11,\n    url: tulip,\n    title: 'tulip'\n  }];\n  const [count, setCount] = useState(0);\n  const [clickedIndex, setClickedIndex] = useState();\n  const [clickedTitle, setClickedTitle] = useState();\n  const [matchFound, setMatchFound] = useState([]);\n  const countRef = useRef(0);\n  let [score, setScore] = useState(0);\n  let prevClickedTitle = '';\n  let currentTitile = '';\n  const handleCount = () => {\n    countRef.current += 1;\n    setCount(countRef.current);\n  };\n  const handleClick = useCallback(item => {\n    setClickedIndex(item.id);\n    currentTitile = item.title;\n    prevClickedTitle = clickedTitle;\n    setClickedTitle(currentTitile);\n    if (prevClickedTitle === currentTitile) {\n      score += 1;\n      const newArray = [...matchFound, currentTitile];\n      setMatchFound(newArray);\n      setScore(score);\n    }\n  });\n  const swapArray = () => {\n    for (let i = matchFound.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1)); // Generate random index\n      [matchFound[i], matchFound[j]] = [matchFound[j], matchFound[i]]; // Swap elements\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-[20px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2 border-black rounded-xl\",\n        children: [\"Click Counter : \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2  border-black rounded-xl\",\n        children: [\"score : \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: swapArray,\n        className: \"mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2  border-black rounded-xl pointer\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${score === 6 && count <= 15 ? 'block font-bold text-green-600 py-[20px] text-[30px]' : 'hidden'}`,\n      children: \"WINNER !!!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black grid imageGrid m-[50px] mt-[30px] gap-5\",\n      onClick: handleCount,\n      children: imageCollection.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `box flex justify-center border rounded-sm p-5 cursor-pointer ${index === clickedIndex || matchFound.find(title => title === item.title) ? 'bg-white' : 'bg-black'} h-[200px]`,\n          onClick: () => handleClick(item),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: `md:h-[150px] ${index === clickedIndex || matchFound.find(title => title === item.title) ? 'block' : 'hidden'}`,\n            src: item.url,\n            alt: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 37\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"U6WpzLgHP16ieBlOckm6TcjFROY=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Fragment","useCallback","useRef","useState","rose","daisy","lavender","lilly","sunflower","tulip","jsxDEV","_jsxDEV","Home","_s","imageCollection","id","url","title","count","setCount","clickedIndex","setClickedIndex","clickedTitle","setClickedTitle","matchFound","setMatchFound","countRef","score","setScore","prevClickedTitle","currentTitile","handleCount","current","handleClick","item","newArray","swapArray","i","length","j","Math","floor","random","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","find","src","alt","_c","$RefreshReg$"],"sources":["/Users/tickledmedia/Kinnari/my-repo/memory-game/src/components/Home.js"],"sourcesContent":["import React, { Fragment, useCallback, useRef, useState } from 'react'\nimport rose from '../images/rose.jpeg'\nimport daisy from '../images/daisy.webp'\nimport lavender from '../images/lavender.jpeg'\nimport lilly from '../images/lilly.jpeg'\nimport sunflower from '../images/sunflower.jpeg'\nimport tulip from '../images/tulip.jpeg'\n\nexport default function Home() {\n\nconst imageCollection = [\n        {\n            id : 0,\n            url : rose,\n            title : 'rose',\n        },\n        {\n            id : 1,\n            url : daisy,\n            title : 'daisy',\n        },\n        {\n            id : 2,\n            url : lavender,\n            title : 'lavender',\n        },\n        {\n            id : 3,\n            url : lilly,\n            title : 'lilly',\n        },\n        {\n            id : 4,\n            url : sunflower,\n            title : 'sunflower',\n        },\n        {\n            id : 5,\n            url : tulip,\n            title : 'tulip',\n        },     \n        {\n            id : 6,\n            url : rose,\n            title : 'rose',\n        },\n        {\n            id : 7,\n            url : daisy,\n            title : 'daisy',\n        },\n        {\n            id : 8,\n            url : lavender,\n            title : 'lavender',\n        },\n        {\n            id : 9,\n            url : lilly,\n            title : 'lilly',\n        },\n        {\n            id : 10,\n            url : sunflower,\n            title : 'sunflower',\n        },\n        {\n            id : 11,\n            url : tulip,\n            title : 'tulip',\n        },     \n];\n\nconst [count, setCount] = useState(0);\nconst [clickedIndex, setClickedIndex] = useState();\nconst [clickedTitle,setClickedTitle] = useState();\nconst [matchFound, setMatchFound] = useState([]);\nconst countRef = useRef(0);\n\nlet [score, setScore] = useState(0);\n\nlet prevClickedTitle = '';\nlet currentTitile = '';\n\n\nconst handleCount = () =>{\n    countRef.current += 1;\n    setCount(countRef.current)\n}\n\nconst handleClick = useCallback((item) => {\n    setClickedIndex(item.id);\n    currentTitile = item.title;\n    prevClickedTitle = clickedTitle;\n    setClickedTitle(currentTitile)\n    \n    if(prevClickedTitle === currentTitile){\n        score +=1;\n        const newArray = [...matchFound, currentTitile];\n        setMatchFound(newArray);\n        setScore(score);\n    }\n});\n\nconst swapArray = () =>{\n    for (let i = matchFound.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1)); // Generate random index\n        [matchFound[i], matchFound[j]] = [matchFound[j], matchFound[i]]; // Swap elements\n      }\n} \n\n  return (\n    <Fragment>\n        <div className='mt-[20px]'>\n            <span className='mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2 border-black rounded-xl'>Click Counter : {count}</span>\n            <span className='mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2  border-black rounded-xl'>score : {score}</span>\n            <span onClick={swapArray} className='mt-5 mb-5 inline-flex justify-end mr-[50px] p-3 border-2  border-black rounded-xl pointer'>Reset</span>\n        </div>\n        <div className={`${score === 6 && count <= 15 ? 'block font-bold text-green-600 py-[20px] text-[30px]' : 'hidden'}`}>WINNER !!!!</div>\n        <div className='black grid imageGrid m-[50px] mt-[30px] gap-5' onClick={handleCount}>\n            {\n                        imageCollection.map((item,index) =>{\n                            return(\n                                <div \n                                className={`box flex justify-center border rounded-sm p-5 cursor-pointer ${index === clickedIndex || matchFound.find(title => title === item.title) ? 'bg-white' : 'bg-black'} h-[200px]`} \n                                key={index} \n                                onClick={() => handleClick(item)}>     \n                                    <img \n                                        className={`md:h-[150px] ${index === clickedIndex || matchFound.find(title => title === item.title) ? 'block' : 'hidden'}`} \n                                        src={item.url} \n                                        alt={item.title}>\n                                    </img>               \n                                </div>\n                            )\n                         })\n            }\n        </div>\n    </Fragment>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}